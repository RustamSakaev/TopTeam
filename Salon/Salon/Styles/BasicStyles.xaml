<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Salon"
                    x:Class="Directory">

    <Style TargetType="Button">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Foreground" Value="#d9dfeb"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">

                        <Border.Background>
                            <SolidColorBrush x:Name="Background" Color="#61718b" />
                        </Border.Background>
                        <ContentControl Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Background"
                                                        Storyboard.TargetProperty="Color" To="#3A445A" 
                                                        Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Background"
                                                        Storyboard.TargetProperty="Color" To="#61718b" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Background"
                                                        Storyboard.TargetProperty="Color" To="#1C212B" 
                                                        Duration="0:0:0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Menu">
        <Setter Property="DockPanel.Dock" Value="Top" />
        <Setter Property="Background" Value="#2b3043" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Foreground" Value="#d9dfeb" />
    </Style>

    <Style  TargetType="MenuItem">
        <Setter Property="Background" Value="#2b3043" />
        <Setter Property="Foreground" Value="#d9dfeb"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <ContentPresenter 
                    Margin="6,3,6,3" 
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <Popup 
                    Name="Popup"
                    Placement="Bottom"
                    IsOpen="{TemplateBinding IsSubmenuOpen}">
                    <Border 
                      Background="#2b3043"
                      BorderBrush="#2b3043"
                      BorderThickness="0" >
                        <StackPanel  
                            IsItemsHost="True" 
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#3A445A"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <ContentPresenter 
                    Margin="6,3,6,3" 
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <Popup 
                    Name="Popup"
                    Placement="Bottom"
                    IsOpen="{TemplateBinding IsSubmenuOpen}">
                    <Border 
                      Background="#2b3043"
                      BorderBrush="#2b3043"
                      BorderThickness="0" >
                        <StackPanel  
                            IsItemsHost="True" 
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#3A445A"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <ContentPresenter 
                    Margin="6,3,6,3" 
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <Popup 
                    Name="Popup"
                    Placement="Bottom"
                    IsOpen="{TemplateBinding IsSubmenuOpen}">
                    <Border 
                      Background="#2b3043"
                      BorderBrush="#2b3043"
                      BorderThickness="0" >
                        <StackPanel  
                            IsItemsHost="True" 
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#3A445A"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <Path 
        Grid.Column="3"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 0 0 L 0 7 L 4 3.5 Z" 
        Fill="#fff" />
                <ContentPresenter 
                    Margin="6,3,6,3" 
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <Popup 
                    Name="Popup"
                    Placement="Right"
                    HorizontalOffset="-4" 
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    AllowsTransparency="True" 
                    Focusable="False"
                    PopupAnimation="Fade">
                    <Border 
                      Background="#2b3043"
                      BorderBrush="#2b3043"
                      BorderThickness="0" >
                        <StackPanel  
                            IsItemsHost="True" 
                            KeyboardNavigation.DirectionalNavigation="Cycle" />     
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#3A445A"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="DockPanel">
        <Setter Property="LastChildFill" Value="False" />
        <Setter Property="Control.FontFamily" Value="Segoe WP" />
        <Setter Property="Control.FontSize" Value="12" />
        <Setter Property="Background" Value="#484c65" />
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Background" Value="#646e87"/>
        <Setter Property="Control.BorderBrush" Value="#646e87"/>
    </Style>
    
    <Style x:Key="header" TargetType="StackPanel">
        <Setter Property="DockPanel.Dock" Value="Top"/>
    </Style>

    <Style x:Key="bottom" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Orientation" Value="Vertical"/>
    </Style>

    <Style x:Key="search" TargetType="StackPanel">
        <Setter Property="DockPanel.Dock" Value="Top"/>
    </Style>

    <Style x:Key="entryField">
        <Setter Property="Control.Margin" Value="5"/>
        <Setter Property="Control.Height" Value="28"/>
        <Setter Property="Control.Background" Value="#484c65"/>
        <Setter Property="Control.BorderBrush" Value="#646e87"/>
        <Setter Property="Control.Foreground" Value="#d9dfeb"/>
        <Setter Property="Control.Padding" Value="5"/>
    </Style>

    <Style BasedOn="{StaticResource entryField}" TargetType="ComboBox">
        <Setter Property="Control.Foreground" Value="#000"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    
    <Style BasedOn="{StaticResource entryField}" TargetType="DatePicker">
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Control.BorderThickness" Value="0 0 0 2"/>
        <Setter Property="Control.Foreground" Value="#000"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="searchTextBox" BasedOn="{StaticResource entryField}">
        <Setter Property="Control.BorderThickness" Value="0 0 0 2"/>
        <Setter Property="Control.Padding" Value="1 10 1 1"/>
    </Style>

    <Style BasedOn="{StaticResource entryField}" TargetType="TextBox">
        <Setter Property="Control.BorderThickness" Value="2"/>
        <Setter Property="Control.Background" Value="#646e87"/>
    </Style>

    <Style BasedOn="{StaticResource entryField}" TargetType="CheckBox">
        <Setter Property="Margin" Value="5 30 5 5"/>
    </Style>

    <Style x:Key="buttonsPanel" TargetType="StackPanel">
        <Setter Property="DockPanel.Dock" Value="Right"/>
        <Setter Property="Width" Value="150"/>
    </Style>

    <Style x:Key="tablePanel" TargetType="StackPanel">
        <Setter Property="DockPanel.Dock" Value="Left"/>
    </Style>

    <Style x:Key="caption" TargetType="Label">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#d9dfeb" />
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style  TargetType="Label">
        <Setter Property="Foreground" Value="#a5b0c6" />
        <Setter Property="Margin" Value="0,0,0,-10"/>
    </Style>

    <Style x:Key="buttonOkAndCancel" BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
    </Style>

    <Style x:Key="buttonDelete" BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
        <Setter Property="Margin" Value="5 20 5 5"/>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="True"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="ColumnWidth" Value="*"/><!--растягивание столбцов-->
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="SelectionMode" Value="Single"/>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="#54607a" />
        <Setter Property="Foreground" Value="#d9dfeb" />
    </Style>

    <Style x:Key="threeDots"  BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
        <Setter Property="Margin" Value="5 20 5 5"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="28"/>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="Background" Value="#54607a" />
        <Setter Property="Foreground" Value="#d9dfeb" />
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
                <Setter Property="Background" Value="#3A445A" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#2b3043"/>
        <Setter Property="Foreground" Value="#d9dfeb"/>
    </Style>

    <Style TargetType="DataGridRowHeader">
        <Setter Property="Background" Value="#2b3043"/>
        <Setter Property="Foreground" Value="#d9dfeb"/>
    </Style>

</ResourceDictionary>